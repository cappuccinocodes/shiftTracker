// <auto-generated />
using System;
using API.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace cappuccino.shifttracker.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210424063830_InitialCreation")]
    partial class InitialCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("cappuccino.shifttracker.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Nursing"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Yoga"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Dancing"
                        });
                });

            modelBuilder.Entity("cappuccino.shifttracker.Entities.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("End")
                        .HasColumnType("TEXT");

                    b.Property<int>("LocationId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Money")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Rate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Start")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Shifts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Duration = new TimeSpan(1, 12, 24, 2, 0),
                            End = new DateTime(2008, 4, 10, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1,
                            Money = 300m,
                            Rate = 20m,
                            Start = new DateTime(2008, 4, 10, 6, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Duration = new TimeSpan(1, 12, 24, 2, 0),
                            End = new DateTime(2008, 4, 11, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2,
                            Money = 300m,
                            Rate = 30m,
                            Start = new DateTime(2008, 4, 11, 6, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Duration = new TimeSpan(1, 12, 24, 2, 0),
                            End = new DateTime(2008, 4, 12, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3,
                            Money = 100m,
                            Rate = 40m,
                            Start = new DateTime(2008, 4, 12, 6, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            Duration = new TimeSpan(1, 12, 24, 2, 0),
                            End = new DateTime(2008, 4, 13, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3,
                            Money = 100m,
                            Rate = 40m,
                            Start = new DateTime(2008, 4, 13, 6, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Duration = new TimeSpan(1, 12, 24, 2, 0),
                            End = new DateTime(2008, 4, 14, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2,
                            Money = 100m,
                            Rate = 40m,
                            Start = new DateTime(2008, 4, 14, 6, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            Duration = new TimeSpan(1, 12, 24, 2, 0),
                            End = new DateTime(2008, 4, 15, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1,
                            Money = 100m,
                            Rate = 40m,
                            Start = new DateTime(2008, 4, 15, 6, 30, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("cappuccino.shifttracker.Entities.Shift", b =>
                {
                    b.HasOne("cappuccino.shifttracker.Entities.Category", "Category")
                        .WithMany("Shifts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("cappuccino.shifttracker.Entities.Category", b =>
                {
                    b.Navigation("Shifts");
                });
#pragma warning restore 612, 618
        }
    }
}
